---
swagger: '2.0'
info:
  version: 1.0.0
  title: GeoServer Data Stores
  description: A data store contains vector format spatial data. It can be a file (such as a shapefile), a database (such as PostGIS), or a server (such as a remote Web Feature Service).

paths:
  /workspaces/<ws>/datastores[.<format>]:
    get:
      operationId: getDatastores
      summary: Get a list of data stores
      description: List all data stores in workspace ws. Use the "Accept:" header to specify format or append an extension to the endpoint (example "/datastores.xml" for XML)
      produces:
        - application/xml
        - application/json
        - text/html
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/dataStoreResponse"
          examples:
            application/xml: |
              <dataStore>
                <name>sf</name>
                <atom:link xmlns:atom="http://www.w3.org/2005/Atom" rel="alternate" href="http://localhost:8080/geoserver/rest/workspaces/sf/datastores/sf.xml" type="application/xml"/>
              </dataStore>
            
            application/json: |
              {"dataStores":{"dataStore":[{"name":"sf","href":"http://localhost:8080/geoserver/rest/workspaces/sf/datastores/sf.json"}]}}
            
    post:
      operationId: postDatastores
      summary: Create a new data store
      description: Adds a new data store to the workspace.

      parameters:
        - name: dataStoreBody
          description: The data store body information to upload.
          in: body
          required: true          
          schema:
            $ref: "#/definitions/datastore"
      consumes:
        - application/xml
      produces:
        - application/xml
        - application/json
        - text/html
      responses:
        201:
          description: Created
          schema:
            type: string
          headers:
            Location:
              description: URL where the newly created data store can be found
              type: string

    put:
      operationId: putdatastores
      description: Invalid. Use POST for adding a new data store, or PUT on /datastores/{datastore} to edit an existing data store.
      responses:
        405:
          description: Method Not Allowed

    delete:
      operationId: deletedatastores
      description: Invalid. Use /datastores/{datastore} instead.
      responses:
        405:
          description: Method Not Allowed

  /workspaces/<ws>/datastores/<ds>[.<format>]:
    get:
      operationId: getDataStore
      summary: Retrieve a particular data store from a workspace
      description: Controls a particular data store in a given workspace.. Use the "Accept:" header to specify format or append an extension to the endpoint (example "/datastores/{datastore}.xml" for XML).
      produces:
        - application/xml
        - application/json
        - text/html
      parameters:
        - name: dataStoreName
          in: path
          required: true
          description: The name of the data store to retrieve.
          type: string
        - name: quietOnNotFound 
          in: query
          required: false
          description: The quietOnNotFound parameter avoids logging an exception when the data store is not present. Note that 404 status code will still be returned.
          type: boolean             
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/datastore"
          examples:
            application/xml: |
              <dataStore>
                <name>sf</name>
                <enabled>true</enabled>
                <workspace>
                  <name>sf</name>
                  <atom:link xmlns:atom="http://www.w3.org/2005/Atom" rel="alternate" href="http://localhost:8080/geoserver/rest/workspaces/sf.xml" type="application/xml"/>
                </workspace>
                <connectionParameters>
                  <entry key="url">file:data/sf</entry>
                  <entry key="namespace">http://www.openplans.org/spearfish</entry>
                </connectionParameters>
                <__default>false</__default>
                <featureTypes>
                  <atom:link xmlns:atom="http://www.w3.org/2005/Atom" rel="alternate" href="http://localhost:8080/geoserver/rest/workspaces/sf/datastores/sf/featuretypes.xml" type="application/xml"/>
                </featureTypes>
              </dataStore>
              
            application/json: |
              {"dataStore":{"name":"sf","enabled":true,"workspace":{"name":"sf","href":"http://localhost:8080/geoserver/rest/workspaces/sf.json"},"connectionParameters":{"entry":[{"@key":"url","$":"file:data/sf"},{"@key":"namespace","$":"http://www.openplans.org/spearfish"}]},"_default":false,"featureTypes":"http://localhost:8080/geoserver/rest/workspaces/sf/datastores/sf/featuretypes.json"}}
              
    post:
      operationId: postDatastore
      description: Invalid. Use PUT to edit a data store definition, or POST with /datastore to add a new definition.
      responses:
        405:
          description: Method Not Allowed

    put:
      operationId: putDatastore
      summary: Modify a data store.
      description: Modify data store ds. Use the "Accept:" header to specify format or append an extension to the endpoint (example "/datastores/{ds}.xml" for XML).
      parameters:
        - name: dataStoreName
          in: path
          required: true
          description: The name of the data store to modify.
          type: string
        - name: dataStoreBody
          in: body
          description: The updated data store definition.
          required: true
          schema:
            $ref: "#/definitions/datastore"
      consumes:
        - application/xml
        - application/json
      responses:
        200:
          description: The data store was successfully updated.

    delete:
      operationId: deleteDatastore
      summary: Delete data store
      description: Deletes a data store from the server.
      parameters:
        - name: dataStoreName
          in: path
          required: true
          description: The name of the data store to delete.
          type: string
      responses:
        200:
          description: OK

definitions:

  dataStoreResponse:
    title: datastores
    type: object
    properties:
      datastore:
        $ref: "#/definitions/datastore"

  datastore:
    title: datastore
    type: object
    properties:
      name:
        type: string
        description: Name of data store
      link:
        type: string
        description: URL to data store definition

  
